{"version":3,"sources":["Button.js","Icons.js","ToolBar.js","Canvas.js","App.js","index.js"],"names":["Button","props","onClick","className","clicked","children","PenIcon","width","height","viewBox","xmlns","d","fillRule","fillOpacity","fill","stroke","PencilIcon","TextIcon","LineIcon","CircleIcon","RectangleIcon","ArrowIcon","ImageIcon","ToolBar","onModeChange","useState","id","state","setState","handleClick","newState","Array","map","value","index","Canvas","mode","color","canvasRef","useRef","pts","minX","minY","maxX","maxY","path","setPath","paths","setPaths","useEffect","canvas","ctx","getContext","isDrawing","handleMouseDown","e","beginPath","strokeStyle","lineWidth","moveTo","offsetX","offsetY","handleMouseUp","console","log","path_","handleMouseLeave","handleMouseMove","lineTo","push","x","y","addEventListener","removeEventListener","canvasEffectForPenCil","current","ref","Palette","colors","onColorChange","selectedColor","setSelectedColor","style","backgroundColor","App","setColor","setMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d02a0879.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';\r\nexport const Button = (props) => {\r\n    //const [clicked, setClicked] = useState(false);\r\n    const handleClick = () => {\r\n        //setClicked(!clicked)\r\n        props.onClick();\r\n    }\r\n    //{props.children}嵌套的子组件\r\n    return (\r\n        <div onClick={handleClick} className={props.clicked ? \"toolbar-btn-clicked\" : \"toolbar-btn\"}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","export const PenIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M3.444 2.737l6.666 1.9.012.004.011.003C12.072 5.146 13.5 6.907 13.5 9c.003.503-.063.912-.211 1.367l-.185.58.43.43 1.865 1.866-2.12 2.121-1.848-1.847-.435-.435-.585.193c-.469.157-.891.228-1.411.225-2.171 0-3.985-1.539-4.407-3.586l-.008-.037-.01-.037-1.832-6.39 4.903 4.903C7.552 8.55 7.5 8.768 7.5 9c0 .828.672 1.5 1.5 1.5.828 0 1.5-.672 1.5-1.5 0-.828-.672-1.5-1.5-1.5-.232 0-.45.052-.647.146l-4.91-4.91zm9.834 14.041l3.536-3.535-2.572-2.572c.167-.527.258-1.089.258-1.671 0-2.56-1.748-4.71-4.115-5.324L1 1l2.613 9.116C4.13 12.618 6.345 14.5 9 14.5c.602 0 1.182-.097 1.724-.276l2.554 2.554z\"\r\n                fillRule=\"nonzero\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const SelectorIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M9.19875 6.375C7.21125 6.375 5.41125 7.1175 4.02375 8.325L1.32375 5.625V12.375H8.07375L5.35875 9.66C6.40125 8.79 7.72875 8.25 9.19875 8.25C11.8538 8.25 14.1113 9.9825 14.8988 12.375L16.6763 11.79C15.6338 8.6475 12.6863 6.375 9.19875 6.375Z\"\r\n                fillRule=\"nonzero\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n};\r\nexport const PencilIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M7.313 16.431l10.82-10.82c.782-.782.782-2.048 0-2.829L16.72 1.368c-.781-.781-2.048-.781-2.829 0l-10.82 10.82-1.061 5.304 5.303-1.06zM12.235 4.44L3.992 12.68l-.707 3.536 3.535-.707 8.243-8.243-2.829-2.828zm.707-.707L15.77 6.56l1.657-1.657c.39-.39.39-1.023 0-1.414l-1.414-1.414c-.39-.39-1.024-.39-1.415 0l-1.657 1.657z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport const TextIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M2 5h1V2h5v14H5v1h7v-1H9V2h5v3h1V1H2v4z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const LineIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M1.354 17.353l16-16-.708-.707-16 16 .708.707z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const CircleIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M9 1C4.582 1 1 4.582 1 9c0 4.418 3.582 8 8 8 4.418 0 8-3.582 8-8 0-4.418-3.582-8-8-8zm7 8c0 3.866-3.134 7-7 7-3.866 0-7-3.134-7-7 0-3.866 3.134-7 7-7 3.866 0 7 3.134 7 7z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const RectangleIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M1 1h16v16H1V1zm1 1h14v14H2V2z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const ArrowIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M11 1h6v6h-1V2.707L1.354 17.354l-.708-.708L15.293 2H11V1z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\nexport const ImageIcon = () => {\r\n    return (\r\n        <svg\r\n            className=\"svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 18 18\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path\r\n                d=\"M14.002 2h-12a1 1 0 0 0-1 1v9l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094L15.002 9.5V3a1 1 0 0 0-1-1zm-12-1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm4 4.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\r\n                fillRule=\"evenodd\"\r\n                fillOpacity=\"1\"\r\n                fill=\"#ffffff\"\r\n                stroke=\"none\"\r\n            ></path>\r\n        </svg>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport { Button } from \"./Button\";\r\nimport { PenIcon, SelectorIcon, PencilIcon, TextIcon, ImageIcon, ArrowIcon, RectangleIcon, CircleIcon, LineIcon } from \"./Icons\";\r\nimport \"./App.css\"\r\nexport const ToolBar = ({ onModeChange }) => {\r\n    const initialState = [{ id: 0, clicked: true }, { id: 1, clicked: false }, { id: 2, clicked: false }, { id: 3, clicked: false }, { id: 4, clicked: false },\r\n    { id: 5, clicked: false }, { id: 6, clicked: false }, { id: 7, clicked: false }];\r\n    const [state, setState] = useState(initialState);\r\n    const handleClick = (id) => {\r\n        const newState = Array(8).fill({}).map((value, index) => {\r\n            if (id === index) {\r\n                onModeChange(id);\r\n                return { id: index, clicked: true };\r\n            }\r\n            else {\r\n                return { id: index, clicked: false };\r\n            }\r\n\r\n        })\r\n        setState(newState);\r\n    }\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <Button onClick={() => handleClick(0)} clicked={state[0].clicked} id={0}>\r\n                <PencilIcon></PencilIcon>\r\n            </Button>\r\n            <Button onClick={() => handleClick(1)} clicked={state[1].clicked} id={1}>\r\n                <PenIcon></PenIcon>\r\n            </Button>\r\n\r\n            <Button onClick={() => handleClick(2)} clicked={state[2].clicked} id={2}>\r\n                <TextIcon></TextIcon>\r\n            </Button>\r\n            <Button onClick={() => handleClick(3)} clicked={state[3].clicked} id={3}>\r\n                <ImageIcon></ImageIcon>\r\n            </Button>\r\n            <Button onClick={() => handleClick(4)} clicked={state[4].clicked} id={4}>\r\n                <ArrowIcon></ArrowIcon>\r\n            </Button>\r\n            <Button onClick={() => handleClick(5)} clicked={state[5].clicked} id={5}>\r\n                <RectangleIcon />\r\n            </Button>\r\n            <Button onClick={() => handleClick(6)} clicked={state[6].clicked} id={6}>\r\n                <CircleIcon />\r\n            </Button>\r\n            <Button onClick={() => handleClick(7)} clicked={state[7].clicked} id={7}>\r\n                <LineIcon />\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport \"./App.css\";\r\nconst redrawPath = (ctx, path) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = path.color;\r\n    ctx.lineWidth = 1;\r\n    ctx.moveTo(path.pts[0], path.pts[0]);\r\n    for (const pt of path.pts) {\r\n        ctx.lineTo(pt.x, pt.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\nconst canvasEffectForRectangle = (canvas, mode, color) => {\r\n\r\n}\r\nconst canvasEffectForPenCil = (canvas, mode, color, setPath, setPaths, paths) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let isDrawing = false;\r\n    let path = { pts: [], color: color, minX: 10000, minY: 10000, maxX: -1, maxY: -1 };\r\n    const handleMouseDown = (e) => {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(e.offsetX, e.offsetY);\r\n\r\n        isDrawing = true;\r\n    }\r\n    const handleMouseUp = () => {\r\n        isDrawing = false;\r\n        console.log(path);\r\n        const path_ = { pts: [...path.pts], color: color, minX: path.minX, minY: path.minY, maxX: path.maxX, maxY: path.maxY };\r\n        setPath(path_);\r\n        setPaths([...paths, path_]);\r\n        //redrawPath(ctx, path_);\r\n        path.pts = [];\r\n    }\r\n    const handleMouseLeave = () => {\r\n        isDrawing = false;\r\n    }\r\n    const handleMouseMove = (e) => {\r\n        if (isDrawing) {\r\n            ctx.lineTo(e.offsetX, e.offsetY);\r\n            ctx.stroke();\r\n            path.pts.push({ x: e.offsetX, y: e.offsetY });\r\n            if (e.offsetX > path.maxX) {\r\n                path.maxX = e.offsetX;\r\n            }\r\n            if (e.offsetY > path.maxY) {\r\n                path.maxY = e.offsetY;\r\n            }\r\n            if (e.offsetX < path.minX) {\r\n                path.minX = e.offsetX;\r\n            }\r\n            if (e.offsetY < path.minY) {\r\n                path.minY = e.offsetY;\r\n            }\r\n        }\r\n    }\r\n    canvas.addEventListener(\"mousedown\", handleMouseDown);\r\n    canvas.addEventListener(\"mouseup\", handleMouseUp);\r\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\r\n    canvas.addEventListener(\"mouseleave\", handleMouseLeave);\r\n    return () => {\r\n        console.log(\"cleared\");\r\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\r\n        canvas.removeEventListener(\"mouseup\", handleMouseUp);\r\n        canvas.removeEventListener(\"mousemove\", handleMouseMove);\r\n        canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n    }\r\n}\r\nexport const Canvas = ({ mode, color }) => {\r\n    const canvasRef = useRef(null);\r\n    const [path, setPath] = useState({ pts: [], color: color, minX: 10000, minY: 10000, maxX: -1, maxY: -1 });\r\n    const [paths, setPaths] = useState([]);\r\n    useEffect(() => {\r\n        return canvasEffectForPenCil(canvasRef.current, mode, color, setPath, setPaths, paths);\r\n    }, [mode, color, path, paths]);\r\n    return (\r\n        <div className=\"back-div\" >\r\n            <canvas\r\n                ref={canvasRef}\r\n                width=\"1000px\"\r\n                height=\"500px\"\r\n                id=\"canvas1\"\r\n                className=\"paint-canvas\"\r\n            >\r\n            </canvas>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { ToolBar } from \"./ToolBar\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport React, { useState } from 'react';\r\nconst Palette = ({ colors, onColorChange }) => {\r\n    const [selectedColor, setSelectedColor] = useState(colors[0]);\r\n    const handleClick = (color) => {\r\n        setSelectedColor(color);\r\n        onColorChange(color);\r\n    }\r\n    return (\r\n        <div className=\"panel\" >\r\n            {\r\n                colors.map((color, index) => {\r\n                    if (selectedColor === color) {\r\n                        return (\r\n                            <div className=\"selected\" key={index}>\r\n                                <div\r\n                                    onClick={() => handleClick(color)}\r\n                                    className=\"div-color\"\r\n                                    style={{ backgroundColor: color }}>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div key={index}\r\n                            onClick={() => handleClick(color)}\r\n                            className=\"div-color\"\r\n                            style={{ backgroundColor: color }}>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst App = () => {\r\n    const [color, setColor] = useState(\"rgb(255, 133, 119)\");\r\n    const [mode, setMode] = useState(0);\r\n    const handleColorChange = (color) => {\r\n        setColor(color);\r\n    }\r\n    const handleModeChange = (mode) => {\r\n        setMode(mode);\r\n    }\r\n    return (\r\n        <div>\r\n            <ToolBar onModeChange={handleModeChange}></ToolBar>\r\n            <Canvas mode={mode} color={color}>\r\n            </Canvas>\r\n            <Palette colors={[\"rgb(255, 133, 119)\"/**red */,\r\n                \"rgb(27 196 125)\"/*green */,\r\n                \"rgba(24,160,251,1)\"/*blue */,\r\n                \"rgb(255, 199, 0)\"/**yellow */,\r\n                \"rgb(44 44 44)\"/**black */\r\n            ]} onColorChange={handleColorChange}></Palette>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { Button } from \"./Button\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}